{"version":3,"file":"static/js/835.413adbfc.chunk.js","mappings":"yPAGaA,EAAiBC,EAAAA,GAAAA,IAAU,4bAsB3BC,EAAaD,EAAAA,GAAAA,IAAU,+HAIrB,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAC,IAG1BC,EAAWN,EAAAA,GAAAA,IAAU,sEAEf,YAAa,SAAVO,WAA+B,OAAS,MAAM,IAEvDC,EAAQR,EAAAA,GAAAA,MAAY,4cAsBpBS,EAAQT,EAAAA,GAAAA,GAAS,kIAOjBU,GAAiBV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAY,oHAM7BY,EAAUZ,EAAAA,GAAAA,GAAS,6KAYnBa,GAJQb,EAAAA,GAAAA,MAAY,gDAIXA,EAAAA,GAAAA,OAAa,4tB,8BCjEtBc,EAAY,WACvB,IACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAEJE,MAAM,sBACNC,SAAS,qBACZC,SAAUJ,EAAAA,KAEPK,IAAI,EAAG,0CACPC,IAAI,IACJC,QAAQ,eAAgB,2CACxBA,QAZkB,qDAYM,yBACxBJ,SAAS,0BAGRK,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CAAER,MAAO,GAAIE,SAAU,IACtCL,iBAAkBA,EAClBY,SAAU,SAAAC,GACRC,QAAQC,IAAIF,GACZf,GAASkB,EAAAA,EAAAA,GAAMH,IACfJ,EAAOQ,WACT,IAGF,OACE,UAACnC,EAAc,YACb,SAACU,EAAK,UAAC,WACP,kBAAMoB,SAAUH,EAAOS,aAAcC,aAAa,MAAK,WACrD,UAAC9B,EAAQ,YACP,SAACE,EAAK,CACJ6B,KAAK,QACLC,KAAK,QACLC,YAAY,QACZC,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOI,OAAOV,QAEtBM,EAAOiB,QAAQvB,OAASM,EAAOkB,OAAOxB,QACrC,SAACnB,EAAU,UAAEyB,EAAOkB,OAAOxB,YAG/B,UAACd,EAAQ,YACP,SAACE,EAAK,CACJ8B,KAAK,WACLC,YAAY,WACZC,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOI,OAAOR,WAEtBI,EAAOiB,QAAQrB,UAAYI,EAAOkB,OAAOtB,WACxC,SAACrB,EAAU,UAAEyB,EAAOkB,OAAOtB,eAG/B,SAACT,EAAM,CAACwB,KAAK,SAAQ,SAAC,cAExB,UAACzB,EAAO,WAAC,yBACgB,KACvB,SAACF,EAAc,CAACmC,GAAG,YAAW,SAAC,aAA0B,SAIjE,EClEA,EAXc,WAIZ,OACE,+BACE,SAAC/B,EAAS,KAGhB,C","sources":["components/AuthForm/LoginForm/LoginForm.styled.jsx","components/AuthForm/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LoginContainer = styled.div`\n  width: 100%;\n  margin-top: 45px;\n  margin-bottom: 45px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    margin-top: 205px;\n    width: 608px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 60px 80px;\n    background: #fff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n  }\n\n  @media (min-width: 1300px) {\n    width: 618px;\n    margin-top: 80px;\n  }\n`;\nexport const ErrorInput = styled.div`\n  color: rgb(228, 70, 70);\n  position: absolute;\n  bottom: -15px;\n  font-size: ${p => p.theme.fontSizes.a};\n  left: 24px;\n`;\nexport const InputBox = styled.div`\n  position: relative;\n  margin-bottom: ${({ lastMargin }) => (lastMargin ? '40px' : '16px')};\n`;\nexport const Input = styled.input`\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  padding:14px 11px;\n  width:280px;\n  color: rgba(17, 17, 17, 0.6);\nfont-size: 18px;\nline-height: 25px;\n:focus-visible {\n  outline: 2px solid rgba(245, 146, 86, 0.5);\n}\n @media (min-width: 768px){\n  width:448px;\n  padding: 14px 32px 13px 32px;\n }\n  @media (min-width: 1300px) {\n   width: 458px;\n  }\n }\n`;\nexport const Title = styled.h3`\n  color: #111111;\n  font-size: 36px;\n  line-height: 49px;\n  font-weight: 500;\n  margin-bottom: 40px;\n`;\nexport const LinkToRegister = styled(Link)`\n  color: #3091eb;\n  font-size: 12px;\n  line-height: 16px;\n  text-decoration: underline;\n`;\nexport const DontLog = styled.h4`\n  color: rgba(17, 17, 17, 0.6);\n  font-size: 12px;\n  line-height: 16px;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.04em;\n`;\nexport const Label = styled.label`\n  background: #fdf7f2;\n`;\n\nexport const Button = styled.button`\n  background: #f59256;\n  border-radius: 40px;\n  margin-top: 40px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 28px;\n  margin-bottom: 40px;\n  padding: 10px 28px;\n  font-size: 20px;\n  line-height: 27px;\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.04em;\n  border: none;\n  cursor: pointer;\n  color: #ffffff;\n  padding: 14px 11px;\n  width: 280px;\n  :active {\n    background-color: rgba(252, 173, 70, 1);\n    transform: translate(0, 0.25em);\n    box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n  }\n  @media (min-width: 1300px) {\n    width: 458px;\n  }\n`;\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  LoginContainer,\n  LinkToRegister,\n  DontLog,\n  Title,\n  Input,\n  Button,\n  ErrorInput,\n  InputBox,\n} from './LoginForm.styled';\n\nimport React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\n\nexport const LoginForm = () => {\n  const passwordRexExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])/;\n  const dispatch = useDispatch();\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Email is not valid')\n      .required('Email is required'),\n    password: yup\n      .string()\n      .min(7, 'Password must be at least 7 characters')\n      .max(32)\n      .matches(/^[^ ]{7,32}$/, 'The password should not contain a space')\n      .matches(passwordRexExp, 'Password is not valid')\n      .required('Password is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: { email: '', password: '' },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      console.log(values);\n      dispatch(login(values));\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <LoginContainer>\n      <Title>Login</Title>\n      <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n        <InputBox>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          {formik.touched.email && formik.errors.email && (\n            <ErrorInput>{formik.errors.email}</ErrorInput>\n          )}\n        </InputBox>\n        <InputBox>\n          <Input\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          {formik.touched.password && formik.errors.password && (\n            <ErrorInput>{formik.errors.password}</ErrorInput>\n          )}\n        </InputBox>\n        <Button type=\"submit\">Login</Button>\n      </form>\n      <DontLog>\n        Don't have an account?{' '}\n        <LinkToRegister to=\"/register\">Register</LinkToRegister>{' '}\n      </DontLog>\n    </LoginContainer>\n  );\n};\n","import React from 'react';\nimport { LoginForm } from '../../components/AuthForm/LoginForm/LoginForm';\n\nconst Login = () => {\n  // RTK Query (Отримання \"токену\")\n  // const { token } = useSelector(getUser);\n\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n//  <AuthContainer>\n//    <Title>Login</Title>\n//  </AuthContainer>;\n"],"names":["LoginContainer","styled","ErrorInput","p","theme","fontSizes","a","InputBox","lastMargin","Input","Title","LinkToRegister","Link","DontLog","Button","LoginForm","dispatch","useDispatch","validationSchema","yup","shape","email","required","password","min","max","matches","formik","useFormik","initialValues","onSubmit","values","console","log","login","resetForm","handleSubmit","autoComplete","type","name","placeholder","onChange","handleChange","value","touched","errors","to"],"sourceRoot":""}