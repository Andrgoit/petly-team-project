{"version":3,"file":"static/js/811.edc3cde8.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.jsx","components/AuthForm/RegisterForm/RegisterForm.styled.jsx","components/AuthForm/RegisterForm/RegisterStepOne/RegisterStepOne.jsx","components/AuthForm/RegisterForm/RegisterStepTwo/RegisterStepTwo.jsx","components/AuthForm/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AuthContainer = styled.div`\n  width: 100%;\n  margin-top: 45px;\n  margin-bottom: 45px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 60px 80px;\n    background: #fff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n  }\n\n  @media (min-width: 1300px) {\n    width: 618px;\n  }\n`;\n","// import PropTypes from 'prop-types';\nimport { AuthContainer } from './AuthForm.styled';\n\nexport default function AuthForm({ children }) {\n  return <AuthContainer>{children}</AuthContainer>;\n}\n\n// AuthForm.propTypes = {\n//   children: PropTypes.node,\n// };\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const TitleForm = styled.div`\n  margin-bottom: 40px;\n  font-weight: ${p => p.theme.fontWeights.preBold};\n  font-size: 36px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.black};\n`;\nexport const BoxLink = styled.div`\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.a};\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.login.firstFormText};\n`;\nexport const LinkLogin = styled(Link)`\n  margin-left: 3px;\n  color: ${p => p.theme.colors.login.secFormText};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.home.secButton};\n  }\n`;\nexport const Input = styled.input`\n  width: 100%;\n  height: 52px;\n  padding: 14px 32px;\n\n  background-color: ${p => p.theme.colors.login.bgInput};\n  border: 1px solid ${p => p.theme.colors.login.borderInput};\n  border-radius: ${p => p.theme.radii.lg};\n\n  &::placeholder {\n    color: ${p => p.theme.colors.login.placeholderInput};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: rgb(51 51 51 / 11%) 0px 3px 9px;\n    border-color: ${p => p.theme.colors.login.secButton};\n  }\n`;\nexport const InputBox = styled.div`\n  position: relative;\n  margin-bottom: ${({ lastMargin }) => (lastMargin ? '40px' : '16px')};\n`;\nexport const ErrorInput = styled.div`\n  color: rgb(228, 70, 70);\n  position: absolute;\n  bottom: -15px;\n  font-size: ${p => p.theme.fontSizes.a};\n  left: 24px;\n`;\nexport const ButtonForm = styled.button`\n  width: 100%;\n  padding: 10.5px;\n  margin-bottom: ${({ lastMargin }) => (lastMargin ? '16px' : '40px')};\n  border: none;\n  background-color: ${p => p.theme.colors.login.secButton};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.lg};\n  font-weight: ${p => p.theme.fontWeights.preBold};\n  font-size: ${p => p.theme.fontSizes.i};\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #eb7f3c;\n  }\n`;\nexport const ButtonPrev = styled.button`\n  width: 100%;\n  padding: 10.5px;\n  margin-bottom: 40px;\n  border: 2px solid ${p => p.theme.colors.login.secButton};\n  background-color: ${p => p.theme.colors.login.primButton};\n  color: ${p => p.theme.colors.primButtonText};\n  border-radius: ${p => p.theme.radii.lg};\n  font-weight: ${p => p.theme.fontWeights.preBold};\n  font-size: ${p => p.theme.fontSizes.i};\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.login.secButton};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport {\n  Input,\n  ErrorInput,\n  InputBox,\n  ButtonForm,\n} from '../RegisterForm.styled';\n\nexport const RegisterStepOne = ({ next, data }) => {\n  const passwordRexExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])/;\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Email is not valid')\n      .required('Email is required'),\n    password: yup\n      .string()\n      .min(7, 'Password must be at least 7 characters')\n      .max(32)\n      .matches(/^[^ ]{7,32}$/, 'The password should not contain a space')\n      .matches(passwordRexExp, 'Password is not valid')\n      .required('Password is required'),\n    confirmPassword: yup\n      .string()\n      .required('Confirm Password is required')\n      .when('password', {\n        is: value => (value && value.length > 0 ? true : false),\n        then: yup\n          .string()\n          .oneOf([yup.ref('password')], 'Both passwords must be the same'),\n      }),\n  });\n\n  const formik = useFormik({\n    initialValues: data,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      next(values);\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n      <InputBox>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        {formik.touched.email && formik.errors.email && (\n          <ErrorInput>{formik.errors.email}</ErrorInput>\n        )}\n      </InputBox>\n      <InputBox>\n        <Input\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        {formik.touched.password && formik.errors.password && (\n          <ErrorInput>{formik.errors.password}</ErrorInput>\n        )}\n      </InputBox>\n      <InputBox lastMargin>\n        <Input\n          name=\"confirmPassword\"\n          placeholder=\"Confirm Password\"\n          onChange={formik.handleChange}\n          value={formik.values.confirmPassword}\n        />\n        {formik.touched.confirmPassword && formik.errors.confirmPassword && (\n          <ErrorInput>{formik.errors.confirmPassword}</ErrorInput>\n        )}\n      </InputBox>\n      <ButtonForm type=\"submit\">Next</ButtonForm>\n    </form>\n  );\n};\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport {\n  Input,\n  ErrorInput,\n  InputBox,\n  ButtonForm,\n  ButtonPrev,\n} from '../RegisterForm.styled';\n\nexport const RegisterStepTwo = ({ next, data, prev }) => {\n  const nameRegex = /^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/;\n  const locationRegex = /^[A-Z\\-’ ]{1,}[a-z\\-’ ]+, [a-zA-Z\\-’ ]+$/;\n  const phoneRegex = /^\\+380........./;\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required('Name is required')\n      .matches(nameRegex, 'The name must contain only latin letters'),\n    location: yup\n      .string()\n      .required('City is required')\n      .matches(locationRegex, 'City is not valid. Example: Brovary, Kyiv'),\n    phone: yup\n      .string()\n      .required('Phone is required')\n      .max(13)\n      .matches(phoneRegex, 'Phone is not valid. Example: +380XXXXXXXXX'),\n  });\n\n  const formik = useFormik({\n    initialValues: data,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const registerValues = { ...values };\n      delete registerValues.confirmPassword;\n      next(registerValues, true);\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <InputBox>\n        <Input\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n        />\n        {formik.touched.name && formik.errors.name && (\n          <ErrorInput>{formik.errors.name}</ErrorInput>\n        )}\n      </InputBox>\n      <InputBox>\n        <Input\n          name=\"location\"\n          placeholder=\"City, region\"\n          onChange={formik.handleChange}\n          value={formik.values.location.replace(/(^|\\s)\\S/g, function (letter) {\n            return letter.toUpperCase();\n          })}\n        />\n        {formik.touched.location && formik.errors.location && (\n          <ErrorInput>{formik.errors.location}</ErrorInput>\n        )}\n      </InputBox>\n      <InputBox lastMargin>\n        <Input\n          name=\"phone\"\n          placeholder=\"Mobile phone\"\n          onChange={formik.handleChange}\n          value={formik.values.phone}\n        />\n        {formik.touched.phone && formik.errors.phone && (\n          <ErrorInput>{formik.errors.phone}</ErrorInput>\n        )}\n      </InputBox>\n      <ButtonForm type=\"submit\" lastMargin>\n        Register\n      </ButtonForm>\n      <ButtonPrev type=\"button\" onClick={() => prev(formik.values)}>\n        Back\n      </ButtonPrev>\n    </form>\n  );\n};\n","import AuthForm from '../AuthForm';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { register } from 'redux/auth/authOperations';\n\nimport { RegisterStepOne } from './RegisterStepOne/RegisterStepOne';\nimport { RegisterStepTwo } from './RegisterStepTwo/RegisterStepTwo';\n\nimport { TitleForm, BoxLink, LinkLogin } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    location: '',\n    phone: '',\n  });\n\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const handleNextStep = async (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      try {\n        await dispatch(register(newData));\n\n        navigate('/user');\n      } catch (error) {\n        toast.error(error);\n      }\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <RegisterStepOne next={handleNextStep} data={data} />,\n    <RegisterStepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\n  ];\n\n  return (\n    <AuthForm>\n      <TitleForm>Registration</TitleForm>\n      {steps[currentStep]}\n      <BoxLink>\n        Already have an account?\n        <LinkLogin to=\"/login\">Login</LinkLogin>\n      </BoxLink>\n    </AuthForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 0 16px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 100px;\n  padding-bottom: 100px;\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 45px;\n    padding-bottom: 116px;\n  }\n`;\n","import { RegisterForm } from 'components/AuthForm/RegisterForm/RegisterForm';\r\nimport { Section, Container } from './RegisterPage.styled';\r\n\r\nexport default function RegisterPage() {\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        <RegisterForm />\r\n      </Container>\r\n    </Section>\r\n  );\r\n}\r\n\r\n"],"names":["AuthContainer","styled","AuthForm","children","TitleForm","p","theme","fontWeights","preBold","colors","black","BoxLink","normal","fontSizes","a","login","firstFormText","LinkLogin","Link","secFormText","home","secButton","Input","bgInput","borderInput","radii","lg","placeholderInput","InputBox","lastMargin","ErrorInput","ButtonForm","white","i","ButtonPrev","primButton","primButtonText","RegisterStepOne","next","data","validationSchema","yup","shape","email","required","password","min","max","matches","confirmPassword","when","is","value","length","then","oneOf","formik","useFormik","initialValues","onSubmit","values","handleSubmit","autoComplete","type","name","placeholder","onChange","handleChange","touched","errors","RegisterStepTwo","prev","location","phone","registerValues","replace","letter","toUpperCase","onClick","RegisterForm","navigate","useNavigate","dispatch","useDispatch","useState","setData","currentStep","setCurrentStep","handleNextStep","newData","final","register","toast","steps","to","Container","Section","RegisterPage"],"sourceRoot":""}