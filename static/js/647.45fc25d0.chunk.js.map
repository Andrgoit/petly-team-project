{"version":3,"file":"static/js/647.45fc25d0.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.jsx","components/AuthForm/RegisterForm/RegisterForm.styled.jsx","components/AuthForm/RegisterForm/RegisterStepOne/RegisterStepOne.jsx","components/AuthForm/RegisterForm/RegisterStepTwo/RegisterStepTwo.jsx","components/AuthForm/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AuthContainer = styled.div`\n  text-align: center;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 60px 80px;\n    background: #fff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n  }\n\n  @media (min-width: 1300px) {\n    width: 618px;\n  }\n`;\n","// import PropTypes from 'prop-types';\nimport { AuthContainer } from './AuthForm.styled';\n\nexport default function AuthForm({ children }) {\n  return <AuthContainer>{children}</AuthContainer>;\n}\n\n// AuthForm.propTypes = {\n//   children: PropTypes.node,\n// };\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const TitleForm = styled.div`\n  margin-bottom: 40px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.f};\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.black};\n\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: ${p => p.theme.fontWeights.preBold};\n  }\n`;\nexport const BoxLink = styled.div`\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.a};\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.login.firstFormText};\n`;\nexport const LinkLogin = styled(Link)`\n  margin-left: 3px;\n  color: ${p => p.theme.colors.login.secFormText};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.home.secButton};\n  }\n`;\nexport const Input = styled.input`\n  width: 100%;\n  height: 40px;\n  padding: 11px 14px;\n\n  background-color: ${p => p.theme.colors.login.bgInput};\n  border: 1px solid ${p => p.theme.colors.login.borderInput};\n  border-radius: ${p => p.theme.radii.lg};\n\n  @media (min-width: 768px) {\n    height: 52px;\n    padding: 14px 32px;\n  }\n\n  &::placeholder {\n    color: ${p => p.theme.colors.login.placeholderInput};\n    font-size: ${p => p.theme.fontSizes.b};\n\n    @media (min-width: 768px) {\n      font-size: ${p => p.theme.fontSizes.d};\n    }\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: rgb(51 51 51 / 11%) 0px 3px 9px;\n    border-color: ${p => p.theme.colors.login.secButton};\n  }\n`;\nexport const InputBox = styled.div`\n  position: relative;\n  margin-bottom: ${({ lastMargin }) => (lastMargin ? '40px' : '16px')};\n`;\nexport const ErrorInput = styled.div`\n  color: rgb(228, 70, 70);\n  position: absolute;\n  bottom: -15px;\n  font-size: ${p => p.theme.fontSizes.a};\n  left: 24px;\n`;\nexport const ButtonForm = styled.button`\n  width: 100%;\n  padding: 8.5px;\n  margin-bottom: ${({ lastMargin }) => (lastMargin ? '16px' : '40px')};\n  border: none;\n  background-color: ${p => p.theme.colors.login.secButton};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.lg};\n  font-weight: ${p => p.theme.fontWeights.preBold};\n  font-size: ${p => p.theme.fontSizes.i};\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #eb7f3c;\n  }\n\n  @media (min-width: 768px) {\n    padding: 10.5px;\n  }\n`;\nexport const ButtonPrev = styled.button`\n  width: 100%;\n  padding: 6.5px;\n  margin-bottom: 40px;\n  border: 2px solid ${p => p.theme.colors.login.secButton};\n  background-color: ${p => p.theme.colors.login.primButton};\n  color: ${p => p.theme.colors.primButtonText};\n  border-radius: ${p => p.theme.radii.lg};\n  font-weight: ${p => p.theme.fontWeights.preBold};\n  font-size: ${p => p.theme.fontSizes.i};\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.login.secButton};\n    color: ${p => p.theme.colors.white};\n  }\n\n  @media (min-width: 768px) {\n    padding: 10.5px;\n  }\n`;\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport {\n  Input,\n  ErrorInput,\n  InputBox,\n  ButtonForm,\n} from '../RegisterForm.styled';\n\nexport const RegisterStepOne = ({ next, data }) => {\n  const passwordRexExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])/;\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Email is not valid')\n      .required('Email is required'),\n    password: yup\n      .string()\n      .min(7, 'Password must be at least 7 characters')\n      .max(32)\n      .matches(/^[^ ]{7,32}$/, 'The password should not contain a space')\n      .matches(passwordRexExp, 'Password is not valid')\n      .required('Password is required'),\n    confirmPassword: yup\n      .string()\n      .required('Confirm Password is required')\n      .when('password', {\n        is: value => (value && value.length > 0 ? true : false),\n        then: yup\n          .string()\n          .oneOf([yup.ref('password')], 'Both passwords must be the same'),\n      }),\n  });\n\n  const formik = useFormik({\n    initialValues: data,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      next(values);\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n      <InputBox>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        {formik.touched.email && formik.errors.email && (\n          <ErrorInput>{formik.errors.email}</ErrorInput>\n        )}\n      </InputBox>\n      <InputBox>\n        <Input\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        {formik.touched.password && formik.errors.password && (\n          <ErrorInput>{formik.errors.password}</ErrorInput>\n        )}\n      </InputBox>\n      <InputBox lastMargin>\n        <Input\n          name=\"confirmPassword\"\n          placeholder=\"Confirm Password\"\n          onChange={formik.handleChange}\n          value={formik.values.confirmPassword}\n        />\n        {formik.touched.confirmPassword && formik.errors.confirmPassword && (\n          <ErrorInput>{formik.errors.confirmPassword}</ErrorInput>\n        )}\n      </InputBox>\n      <ButtonForm type=\"submit\">Next</ButtonForm>\n    </form>\n  );\n};\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport {\n  Input,\n  ErrorInput,\n  InputBox,\n  ButtonForm,\n  ButtonPrev,\n} from '../RegisterForm.styled';\n\nexport const RegisterStepTwo = ({ next, data, prev }) => {\n  const nameRegex = /^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/;\n  const locationRegex = /^[A-Z\\-’ ]{1,}[a-z\\-’ ]+, [a-zA-Z\\-’ ]+$/;\n  const phoneRegex = /^\\+380........./;\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required('Name is required')\n      .matches(nameRegex, 'The name must contain only latin letters'),\n    location: yup\n      .string()\n      .required('City is required')\n      .matches(locationRegex, 'City is not valid. Example: Brovary, Kyiv'),\n    phone: yup\n      .string()\n      .required('Phone is required')\n      .max(13)\n      .matches(phoneRegex, 'Phone is not valid. Example: +380XXXXXXXXX'),\n  });\n\n  const formik = useFormik({\n    initialValues: data,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const registerValues = { ...values };\n      delete registerValues.confirmPassword;\n      next(registerValues, true);\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <InputBox>\n        <Input\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n        />\n        {formik.touched.name && formik.errors.name && (\n          <ErrorInput>{formik.errors.name}</ErrorInput>\n        )}\n      </InputBox>\n      <InputBox>\n        <Input\n          name=\"location\"\n          placeholder=\"City, region\"\n          onChange={formik.handleChange}\n          value={formik.values.location.replace(/(^|\\s)\\S/g, function (letter) {\n            return letter.toUpperCase();\n          })}\n        />\n        {formik.touched.location && formik.errors.location && (\n          <ErrorInput>{formik.errors.location}</ErrorInput>\n        )}\n      </InputBox>\n      <InputBox lastMargin>\n        <Input\n          name=\"phone\"\n          placeholder=\"Mobile phone\"\n          onChange={formik.handleChange}\n          value={formik.values.phone}\n        />\n        {formik.touched.phone && formik.errors.phone && (\n          <ErrorInput>{formik.errors.phone}</ErrorInput>\n        )}\n      </InputBox>\n      <ButtonForm type=\"submit\" lastMargin>\n        Register\n      </ButtonForm>\n      <ButtonPrev type=\"button\" onClick={() => prev(formik.values)}>\n        Back\n      </ButtonPrev>\n    </form>\n  );\n};\n","import AuthForm from '../AuthForm';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { register } from 'redux/auth/authOperations';\n\nimport { RegisterStepOne } from './RegisterStepOne/RegisterStepOne';\nimport { RegisterStepTwo } from './RegisterStepTwo/RegisterStepTwo';\n\nimport { TitleForm, BoxLink, LinkLogin } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    location: '',\n    phone: '',\n  });\n\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const handleNextStep = async (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      try {\n        await dispatch(register(newData));\n\n        navigate('/user');\n      } catch (error) {\n        toast.error(error);\n      }\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <RegisterStepOne next={handleNextStep} data={data} />,\n    <RegisterStepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\n  ];\n\n  return (\n    <AuthForm>\n      <TitleForm>Registration</TitleForm>\n      {steps[currentStep]}\n      <BoxLink>\n        Already have an account?\n        <LinkLogin to=\"/login\">Login</LinkLogin>\n      </BoxLink>\n    </AuthForm>\n  );\n};\n","import styled from 'styled-components';\nimport BgDesk from '../../img/auth/Bg-auth-desk.png';\nimport BgDesk2x from '../../img/auth/Bg-auth-desk@2x.png';\nimport BgTab from '../../img/auth/Bg-auth-tab.png';\nimport BgTab2x from '../../img/auth/Bg-auth-tab@2x.png';\nimport BgMob from '../../img/auth/Bg-auth-mob.png';\nimport BgMob2x from '../../img/auth/Bg-auth-mob@2x.png';\n\nexport const Section = styled.section`\n  padding-top: 40px;\n  padding-bottom: 40px;\n  background-image: url('${BgMob}');\n  background-position: center 100%;\n  background-repeat: no-repeat;\n  height: calc(100vh - 54px);\n  background-size: contain;\n  /* background-size: 1300px 440px; */\n\n  @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url('${BgMob2x}');\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 100px;\n    padding-bottom: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-image: url('${BgTab}');\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url('${BgTab2x}');\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url('${BgDesk}');\n    padding-top: 70px;\n    padding-bottom: 70px;\n    display: block;\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url('${BgDesk2x}');\n    }\n  }\n`;\n","import { RegisterForm } from 'components/AuthForm/RegisterForm/RegisterForm';\r\nimport { Section } from './RegisterPage.styled';\r\nimport { MainContainer } from '../../components/App.styled';\r\n\r\nexport default function RegisterPage() {\r\n  return (\r\n    <Section>\r\n      <MainContainer>\r\n        <RegisterForm />\r\n      </MainContainer>\r\n    </Section>\r\n  );\r\n}\r\n"],"names":["AuthContainer","styled","AuthForm","children","TitleForm","p","theme","fontWeights","bold","fontSizes","f","colors","black","preBold","BoxLink","normal","a","login","firstFormText","LinkLogin","Link","secFormText","home","secButton","Input","bgInput","borderInput","radii","lg","placeholderInput","b","d","InputBox","lastMargin","ErrorInput","ButtonForm","white","i","ButtonPrev","primButton","primButtonText","RegisterStepOne","next","data","validationSchema","yup","shape","email","required","password","min","max","matches","confirmPassword","when","is","value","length","then","oneOf","formik","useFormik","initialValues","onSubmit","values","handleSubmit","autoComplete","type","name","placeholder","onChange","handleChange","touched","errors","RegisterStepTwo","prev","location","phone","registerValues","replace","letter","toUpperCase","onClick","RegisterForm","navigate","useNavigate","dispatch","useDispatch","useState","setData","currentStep","setCurrentStep","handleNextStep","newData","final","register","toast","steps","to","Section","BgMob","BgMob2x","BgTab","BgTab2x","BgDesk","BgDesk2x","RegisterPage"],"sourceRoot":""}